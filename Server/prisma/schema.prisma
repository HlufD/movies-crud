// schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int         @id @default(autoincrement())
  username  String      @unique
  email     String      @unique
  password  String
  createdAt DateTime    @default(now())
  movies    UserMovie[]

  @@map("Users")
}

model Channel {
  id     Int     @id @default(autoincrement())
  name   String  @unique
  movies Movie[]

  @@map("Channels")
}

model Type {
  id     Int     @id @default(autoincrement())
  name   String  @unique
  movies Movie[]

  @@map("Types")
}

model Category {
  id     Int     @id @default(autoincrement())
  name   String  @unique
  movies Movie[]

  @@map("Categories")
}

model Movie {
  id          Int         @id @default(autoincrement())
  title       String      @unique
  duration    Int // Duration in milliseconds
  description String
  videoUrl    String?
  thumbnail   String?
  channelId   Int
  typeId      Int
  categoryId  Int
  channel     Channel     @relation(fields: [channelId], references: [id])
  type        Type        @relation(fields: [typeId], references: [id])
  category    Category    @relation(fields: [categoryId], references: [id])
  users       UserMovie[]

  @@index([title])
  @@map("Movies")
}

model UserMovie {
  userId  Int
  movieId Int
  status  String // 'Watch Later' or 'Favorites'
  user    User   @relation(fields: [userId], references: [id])
  movie   Movie  @relation(fields: [movieId], references: [id])

  @@id([userId, movieId, status])
  @@map("UserMovies")
}
